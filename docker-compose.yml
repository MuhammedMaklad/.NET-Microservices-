services:
  platform:
    container_name: platform-service
    build:
      context: .
      dockerfile: PlatformService/Dockerfile
      target: build-env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SQL_SERVER_CONNECTION_STRING=Server=sql-server;Database=PlatformDB;User Id=sa;Password=Pa55w0rd!;
      - ASPNETCORE_URLS=http://*:5093 # Critical change: * instead of +
      - DOTNET_USE_POLLING_FILE_WATCHER=1 # For hot reload in dev    # depends_on:
    #   - serviceName
    command: ["dotnet", "run"]
    ports:
      - "5093:5093"
  commands:
    container_name: commands-service
    build:
      context: .
      dockerfile: CommandsService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SQL_SERVER_CONNECTION_STRING=Server=sql-server;Database=PlatformDB;User Id=sa;Password=Pa55w0rd!;
      - ASPNETCORE_URLS=http://*:5237 # Critical change: * instead of +
      - DOTNET_USE_POLLING_FILE_WATCHER=1 # For hot reload in dev    # depends_on:
    command: ["dotnet", "run"]
    ports:
      - "5237:5237"
  sql-server-db:
    container_name: my-sql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong(!)Password1
      - MSSQL_PID=Developer
    ports:
     - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Mount init script
    restart: unless-stopped
volumes:
  sqlserver_data: